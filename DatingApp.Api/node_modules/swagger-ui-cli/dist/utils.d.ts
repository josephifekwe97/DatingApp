/**
 * swagger-ui-cli - Standalone Swagger UI server
 * Copyright (C) 2020  e.GO Digital GmbH, Aachen, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
/// <reference types="node" />
import fs from 'fs';
import ora from 'ora';
import { Nilable } from '@egodigital/types';
/**
 * Promise version of 'fs.exists()'.
 */
export declare const exists: typeof fs.exists.__promisify__;
/**
 * Promise version of 'fs.readFile()'.
 */
export declare const readFile: typeof fs.readFile.__promisify__;
/**
 * Promise version of 'fs.stat()'.
 */
export declare const stat: typeof fs.stat.__promisify__;
/**
 * Hashes data with SHA-256.
 *
 * @param {Buffer} data The data to hash.
 *
 * @returns {string} The SHA-256 hash.
 */
export declare function hashData(data: Buffer): string;
/**
 * Normalizes a path.
 *
 * @param {string} p The path.
 *
 * @returns {string} The normalized value.
 */
export declare function normalizePath(p: Nilable<string>): string;
/**
 * Executes an async action, using a spinner.
 *
 * @param {string} text The initial text.
 * @param {Function} action The action to invoke.
 * @param {string} [symbol] The custom success symbol to use.
 *
 * @returns {Promise<TResult>} The promise with the result of the action.
 */
export declare function withSpinner<TResult extends any = any>(text: string, action: (spinner: ora.Ora) => Promise<TResult>, symbol?: string): Promise<TResult>;
